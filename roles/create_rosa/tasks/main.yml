---
- include_vars: vault.yaml

- name: Create work directory
  file:
    path: "{{work_dir}}/{{cluster_name}}/terraform/clusters/"
    state: directory
    mode: '0755'

- name: Create s3 bucket to store state
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
    AWS_DEFAULT_REGION: "{{region}}"
  s3_bucket:
    name:  "{{cluster_name}}-terraform"
    state: present

- name: Copy terraform module to work_dir
  copy:
    src: files/terraform/
    dest: "{{work_dir}}/{{cluster_name}}/terraform/"

- name: Copy terraform files to work_dir
  template:
    src: templates/terraform/{{item}}
    dest: "{{work_dir}}/{{cluster_name}}/terraform/{{item}}"
  with_items:
    - output.tf
    - variables.tf
    - data.tf

- name: "Create ROSA cluster: {{cluster_name}}"
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
    AWS_DEFAULT_REGION: "{{region}}"
    TF_VAR_AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
    TF_VAR_AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
    TF_VAR_AWS_DEFAULT_REGION: "{{region}}"
    TF_BACKEND_BUCKET: terraform-state-nreilly
    TF_VAR_token: "{{rosa_token}}"
    TF_LOG: "debug"
    TF_LOG_PATH: "{{work_dir}}/{{cluster_name}}/terraform.log"
  terraform:
    project_path: "{{work_dir}}/{{cluster_name}}/terraform"
    force_init: true
    state: present
  register: "create_rosa"

- name: "Show output"
  debug:
    msg:
      - "{{ create_rosa.outputs.rosa_sts_cluster.value }}"

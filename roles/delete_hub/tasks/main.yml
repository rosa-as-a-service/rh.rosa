---
- name: Copy terraform module to work_dir
  ansible.builtin.copy:
    src: files/rosa/terraform/
    remote_src: false
    dest: "{{ work_dir }}/{{ rosa_cluster_name }}/terraform/"

- name: Copy terraform files to work_dir
  ansible.builtin.template:
    src: "rosa/{{ item }}"
    dest: "{{ work_dir }}/{{ rosa_cluster_name }}/terraform/{{ item }}"
  with_items:
    - terraform.tfvars.json
    - data.tf

- name: Copy terraform components to work_dir
  ansible.builtin.copy:
    src: files/privatelink/terraform/
    remote_src: false
    dest: "{{ work_dir }}/{{ rosa_cluster_name }}/privatelink/terraform/"

- name: Copy terraform files to work_dir
  ansible.builtin.template:
    src: "privatelink/{{ item }}"
    dest: "{{ work_dir }}/{{ rosa_cluster_name }}/privatelink/terraform/{{ item }}"
  with_items:
    - hub.tfvars.json
    - data.tf
    - privatelink.tf

- name: "Delete {{ rosa_cluster_name }}'s PrivateLink"
  environment:
    TF_BACKEND_BUCKET: "{{ rosa_cluster_name }}-terraform"
    TF_VAR_token: "{{ rosa_token }}"
    AWS_DEFAULT_PROFILE: "rosa_{{ rosa_cluster_name }}"
  cloud.terraform.terraform:
    project_path: "{{ work_dir }}/{{ rosa_cluster_name }}/privatelink/terraform"
    state: absent
  register: rh_privatelink_delete

- name: "Show output"
  ansible.builtin.debug:
    msg: "{{ rh_privatelink_delete.outputs }}"

- name: "Destroy ROSA cluster: {{ rosa_cluster_name }}"
  environment:
    TF_BACKEND_BUCKET: "{{ rosa_cluster_name }}-terraform"
    AWS_DEFAULT_PROFILE: "rosa_{{ rosa_cluster_name }}"
  ansible.builtin.shell:
    cmd: |
      cd "{{ work_dir }}/{{ rosa_cluster_name }}/terraform"
      terraform destroy -auto-approve
  async: 7200
  poll: 0
  register: create_cluster

- name: "Wait for cluster to be destroyed"
  ansible.builtin.async_status:
    jid: "{{ create_cluster.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 240
  delay: 30
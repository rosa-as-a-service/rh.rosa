---
# tasks file for bootstrap-spoke
- name: Ensure AWS long lived credentials are configured on the bastion
  ansible.builtin.shell:
    cmd: |
      export AWS_DEFAULT_PROFILE=rosa
      aws configure set region ap-southeast-2 --profile rosa
      aws configure set aws_access_key_id "{{ aws_access_key_id }}" --profile rosa
      aws configure set aws_secret_access_key "{{ aws_secret_access_key }}" --profile rosa
      aws configure set profile rosa
      rosa login --token "{{ rosa_token }}"
  no_log: true
  changed_when: false

- name: Get Hub cluster API URL
  ansible.builtin.shell:
    cmd: |
      export AWS_DEFAULT_PROFILE=rosa
      rosa describe cluster --cluster=hub --output=json | jq -r '.api.url'
  register: hub_api_url
  failed_when: "'Not logged in' in hub_api_url.stderr"

- name: Get cluster API URL
  ansible.builtin.shell:
    cmd: |
      export AWS_DEFAULT_PROFILE=rosa
      rosa describe cluster --cluster={{ rosa_cluster_name }} --output=json | jq -r '.api.url'
  register: api_url
  failed_when: "'Not logged in' in api_url.stderr"

- name: Get cluster UUID
  ansible.builtin.shell:
    cmd: |
      export AWS_DEFAULT_PROFILE=rosa
      rosa describe cluster --cluster={{ rosa_cluster_name }} --output=json | jq -r '.dns.base_domain' | cut -d '.' -f1
  register: rosa_cluster_uuid_result
  failed_when: "'Not logged in' in rosa_cluster_uuid_result.stderr"

- name: Set ROSA cluster UUID
  ansible.builtin.set_fact:
    _rosa_cluster_uuid: "{{ rosa_cluster_uuid_result.stdout }}"

- name: Set Hub API URL
  ansible.builtin.set_fact:
    hub_api_url: "{{ hub_api_url.stdout }}"

- name: Set Spoke API URL
  ansible.builtin.set_fact:
    bootstrap_api_url: "{{ api_url.stdout }}"

- name: Retrieve Hub authentication token
  community.okd.openshift_auth:
    username: "{{ rosa_admin_username }}"
    password: "{{ rosa_admin_password }}"
    host: "{{ hub_api_url }}"
    validate_certs: false
  register: hub_openshift_auth_results

# - name: Retrieve authentication token
#   community.okd.openshift_auth:
#     username: "{{ rosa_admin_username }}"
#     password: "{{ rosa_admin_password }}"
#     host: "{{ bootstrap_api_url }}"
#     validate_certs: false
#   register: openshift_auth_results
- name: Debug spoke API
  ansible.builtin.set_fact:
    openshift_auth_results:
      openshift_auth:
        api_key: "{{ debug_spoke_key }}"

- name: configure managed cluster
  kubernetes.core.k8s:
    resource_definition: "{{ lookup('ansible.builtin.template', 'managedcluster.yml') }}"
    host: "{{ hub_api_url }}"
    api_key: "{{ hub_openshift_auth_results.openshift_auth.api_key }}"
    validate_certs: false

- name: configure spoke secret
  kubernetes.core.k8s:
    resource_definition: "{{ lookup('ansible.builtin.template', 'spokesecret.yml') }}"
    host: "{{ hub_api_url }}"
    api_key: "{{ hub_openshift_auth_results.openshift_auth.api_key }}"
    validate_certs: false

- name: configure klusterlet addon
  kubernetes.core.k8s:
    resource_definition: "{{ lookup('ansible.builtin.template', 'klusterletaddon.yml') }}"
    host: "{{ hub_api_url }}"
    api_key: "{{ hub_openshift_auth_results.openshift_auth.api_key }}"
    validate_certs: false


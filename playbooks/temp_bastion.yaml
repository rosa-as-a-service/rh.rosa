---
- name: Create a temporary bastion to retrieve API token
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tasks:
    - name: Create work directory
      ansible.builtin.file:
        path: "{{ work_dir }}/{{ rosa_cluster_name }}/temp_bastion/"
        state: directory
        mode: '0755'

    - name: Copy terraform module to work_dir
      ansible.builtin.copy:
        src: files/terraform/
        dest: "{{ work_dir }}/{{ rosa_cluster_name }}/temp_bastion"

    - name: Copy terraform files to work_dir
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ work_dir }}/{{ rosa_cluster_name }}/temp_bastion/{{ item }}"
      with_items:
        - output.tf
        - variables.tf
        - data.tf

    - name: "Create temp bastion for {{ rosa_cluster_name }} cluster"
      environment:
        TF_BACKEND_BUCKET: "{{ rosa_cluster_name }}-terraform"
        AWS_DEFAULT_PROFILE: rosa
        TF_LOG: debug
        TF_LOG_PATH: /var/tmp/hub/tf.log
      ansible.builtin.shell:
        cmd: |
          cd "{{ work_dir }}/{{ rosa_cluster_name }}/temp_bastion"
          terraform init
          terraform apply -auto-approve
      async: 7200
      poll: 0
      register: create_temp_bastion

    - name: "Show output"
      ansible.builtin.async_status:
        jid: "{{ create_temp_bastion.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 240
      delay: 30
